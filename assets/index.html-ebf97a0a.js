import{_ as o,M as d,p as r,q as s,R as e,N as n,t as a,a1 as i}from"./framework-96b046e1.js";const l={},c=e("h1",{id:"enrout-api",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#enrout-api","aria-hidden":"true"},"#"),a(" Enrout API")],-1),u={href:"https://github.com/bolorundurovj/Enrout/actions/workflows/lint.yml",target:"_blank",rel:"noopener noreferrer"},h=e("img",{src:"https://github.com/bolorundurovj/Enrout/actions/workflows/lint.yml/badge.svg",alt:"Lint"},null,-1),p={href:"https://github.com/bolorundurovj/Enrout/actions/workflows/pages/pages-build-deployment",target:"_blank",rel:"noopener noreferrer"},b=e("img",{src:"https://github.com/bolorundurovj/Enrout/actions/workflows/pages/pages-build-deployment/badge.svg",alt:"pages-build-deployment"},null,-1),m=i(`<blockquote><p>A university document information sharing, routing &amp; management system</p></blockquote><h3 id="development" tabindex="-1"><a class="header-anchor" href="#development" aria-hidden="true">#</a> Development</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 4. Run development server and open http://localhost:3000</span>
<span class="token function">yarn</span> start:dev

<span class="token comment"># 5. Read the documentation linked below for &quot;Setup and development&quot;.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="build" tabindex="-1"><a class="header-anchor" href="#build" aria-hidden="true">#</a> Build</h3><p>To build the App, run</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">yarn</span> build:prod
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>And you will see the generated file in <code>dist</code> that ready to be served.</p><h2 id="features" tabindex="-1"><a class="header-anchor" href="#features" aria-hidden="true">#</a> Features</h2><dl><!-- &lt;dt&gt;&lt;b&gt;Quick scaffolding&lt;/b&gt;&lt;/dt&gt;
  &lt;dd&gt;Create modules, services, controller - right from the CLI!&lt;/dd&gt; --><dt><b>Instant feedback</b></dt><dd>Enjoy the best DX (Developer eXperience) and code your app at the speed of thought! Your saved changes are reflected instantaneously.</dd><dt><b>JWT Authentication</b></dt><dd>Installed and configured JWT authentication.</dd><dt><b>Next generation Typescript</b></dt><dd>Always up to date typescript version.</dd><dt><b>Industry-standard routing</b></dt><dd>It&#39;s natural to want to add pages (e.g. /about\`) to your application, and routing makes this possible.</dd><dt><b>Environment Configuration</b></dt><dd>development, staging and production environment configurations</dd><dt><b>Swagger Api Documentation</b></dt><dd>Already integrated API documentation. To see all available endpoints visit http://localhost:3000/documentation</dd><dt><b>Linter</b></dt><dd>eslint + prettier = ❤️</dd></dl><h2 id="documentation" tabindex="-1"><a class="header-anchor" href="#documentation" aria-hidden="true">#</a> Documentation</h2><p>This project includes a <code>docs</code> folder with more details on:</p>`,11),g={href:"https://narhakobyan.github.io/awesome-nest-boilerplate/docs/development.html#first-time-setup",target:"_blank",rel:"noopener noreferrer"},v={href:"https://narhakobyan.github.io/awesome-nest-boilerplate/docs/architecture.html",target:"_blank",rel:"noopener noreferrer"},f={href:"https://narhakobyan.github.io/awesome-nest-boilerplate/docs/naming-cheatsheet.html",target:"_blank",rel:"noopener noreferrer"};function _(k,y){const t=d("ExternalLinkIcon");return r(),s("div",null,[c,e("p",null,[e("a",u,[h,n(t)]),e("a",p,[b,n(t)])]),m,e("ol",null,[e("li",null,[e("a",g,[a("Setup and development"),n(t)])]),e("li",null,[e("a",v,[a("Architecture"),n(t)])]),e("li",null,[e("a",f,[a("Naming Cheatsheet"),n(t)])])])])}const x=o(l,[["render",_],["__file","index.html.vue"]]);export{x as default};
